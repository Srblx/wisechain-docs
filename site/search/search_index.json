{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#documentation-wisechain","title":"Documentation WisechainBienvenue dans la documentation Wisechain","text":"<p>Tout ce dont vous avez besoin pour comprendre, d\u00e9ployer et d\u00e9velopper sur la plateforme Wisechain</p>"},{"location":"#demarrage-rapide","title":"D\u00e9marrage rapide","text":"1 Configurer le serveur <p>Suivez notre guide de configuration du serveur pour pr\u00e9parer votre environnement.</p> 2 D\u00e9ployer avec Docker <p>Utilisez notre guide Docker pour construire et d\u00e9ployer vos images.</p> 3 Configurer Nginx <p>Mettez en place un reverse proxy avec Nginx pour g\u00e9rer le trafic.</p> 4 S\u00e9curiser avec SSL <p>Prot\u00e9gez votre site avec Certbot et SSL.</p>"},{"location":"#documentation-pour-developpeurs","title":"Documentation pour d\u00e9veloppeurs","text":"\ud83d\udee0\ufe0f Architecture <p>Architecture g\u00e9n\u00e9rale de la plateforme Wisechain.</p> \ud83d\uddc4\ufe0f Base de Donn\u00e9es <p>Structure compl\u00e8te de la base de donn\u00e9es MySQL avec Prisma.</p> \u2601\ufe0f D\u00e9ploiement Scaleway <p>Guide de d\u00e9ploiement sur l'infrastructure Scaleway.</p> \ud83d\ude80 D\u00e9ploiement Wisechain <p>Guide de d\u00e9ploiement Front/Back/S3 avec l'infrastructure Scaleway.</p> \ud83d\udd04 CI/CD GitLab <p>Pipeline d'int\u00e9gration et d\u00e9ploiement continus.</p>"},{"location":"#besoin-daide","title":"Besoin d'aide ?Support et Contact","text":"\ud83d\udce7       wisechainnet@gmail.com      \ud83d\udcc2       GitHub Repository"},{"location":"architecture/","title":"Architecture de Wisechain","text":""},{"location":"architecture/#fonctionnalites-nextjs","title":"Fonctionnalit\u00e9s NextJS","text":""},{"location":"architecture/#server-side-rendering-ssrclient-side-rendering-csr","title":"Server-Side Rendering (SSR)/Client-Side Rendering (CSR)","text":"<p>J'utilise le SSR pour les pages qui n\u00e9cessitent des donn\u00e9es au moment du chargement et du CSR pour les pages qui n\u00e9cessitent des donn\u00e9es au moment du chargement.</p>"},{"location":"architecture/#middleware-dauthentification","title":"Middleware d'authentification","text":"<p>J'utilise le middleware NextJS pour prot\u00e9ger certaines routes :</p> <pre><code>export async function middleware(request: NextRequest) {\n  const token = request.cookies.get('token')?.value;\n\n  if ((request.nextUrl.pathname.startsWith('/api-doc') || \n       request.nextUrl.pathname.startsWith('/backoffice')) &amp;&amp; !token) {\n    return NextResponse.redirect(new URL('/', request.url));\n  }\n\n  const response = NextResponse.next();\n\n  response.headers.set('X-DNS-Prefetch-Control', 'on');\n  response.headers.set('Strict-Transport-Security', 'max-age=63072000');\n  response.headers.set('X-Frame-Options', 'SAMEORIGIN');\n  response.headers.set('X-Content-Type-Options', 'nosniff');\n  response.headers.set('Referrer-Policy', 'origin-when-cross-origin');\n  response.headers.set(\n    'Permissions-Policy',\n    'camera=(), microphone=(), geolocation=(), browsing-topics=()'\n  );\n\n  async function verifyRolesAndRedirect(allowedRoles: Roles[]) {\n    if (!token) {\n      return NextResponse.redirect(new URL('/', request.url));\n    }\n\n    try {\n      const { payload } = await jwtVerify(token, JWT_SECRET);\n\n      if (!payload || typeof payload !== 'object' || !('roles' in payload)) {\n        throw new Error('Invalid token payload');\n      }\n\n      const userRoles = Array.isArray(payload.roles) ? payload.roles : [payload.roles];\n\n      if (!userRoles.some(role =&gt; allowedRoles.includes(role))) {\n        return NextResponse.redirect(new URL('/', request.url));\n      }\n\n      return null;\n    } catch (error) {\n      console.error('Erreur de v\u00e9rification du token:', error);\n      return NextResponse.redirect(new URL('/', request.url));\n    }\n  }\n\n  if (request.nextUrl.pathname.startsWith('/backoffice')) {\n    const redirectResponse = await verifyRolesAndRedirect([\n      Roles.ADMIN,\n      Roles.DEVELOPER,\n      Roles.REDACTOR,\n      Roles.MODERATOR\n    ]);\n    if (redirectResponse) return redirectResponse;\n  }\n\n  if (request.nextUrl.pathname.startsWith('/api-doc')) {\n    const redirectResponse = await verifyRolesAndRedirect([\n      Roles.ADMIN,\n      Roles.DEVELOPER\n    ]);\n    if (redirectResponse) return redirectResponse;\n  }\n\n  if (token) {\n    response.cookies.set('token', token, {\n      httpOnly: true,\n      path: '/',\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'lax',\n    });\n  }\n\n  return response;\n}\n\nexport const config = {\n  matcher: ['/:path*', '/api-doc', '/api-doc/:path*', '/backoffice', '/backoffice/:path*'],\n};\n</code></pre>"},{"location":"architecture/#prisma","title":"Prisma","text":"<p>Mon application utilise Prisma comme ORM pour interagir avec la base de donn\u00e9es MySQL. Documentation Prisma</p>"},{"location":"architecture/#client-prisma-singleton","title":"Client Prisma Singleton","text":"<p>Pour \u00e9viter de cr\u00e9er trop d'instances du client Prisma, j'utilise un pattern singleton : <pre><code>declare global {\n  var prisma: PrismaClient | undefined\n}\n\nconst prisma = global.prisma || new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') global.prisma = prisma\n\nexport default prisma\n</code></pre></p>"},{"location":"architecture/#api-routes","title":"API Routes","text":"<p>J'utilise les API Routes de NextJS pour cr\u00e9er notre API backend </p>"},{"location":"architecture/#structure-du-projet","title":"Structure du projet","text":"<pre><code>app/\n\u251c\u2500\u2500 api/               # API Routes\n\u251c\u2500\u2500 page.tsx           # Pages\n\u251c\u2500\u2500 layout.tsx         # Layout\n\u251c\u2500\u2500 error.tsx          # Erreur\n\u251c\u2500\u2500 page.tsx           # Pages\n\u251c\u2500\u2500 sitmap.tsx         # Referencement SEO\n\u251c\u2500\u2500 components/        # Composants React r\u00e9utilisables\n\u251c\u2500\u2500 cypress/           # Tests\n\u2502   \u251c\u2500\u2500 Data/          # Donn\u00e9es de test\n\u2502   \u251c\u2500\u2500 e2e/           # Script de tests e2e\n\u2502   \u251c\u2500\u2500 Fixtures/      # Fixtures de test\n\u2502   \u251c\u2500\u2500 Support/       # Support de test\n\u2502   \u2514\u2500\u2500 ...            \n\u251c\u2500\u2500 hooks/             # Hooks\n\u2502   \u2514\u2500\u2500 ...            \n\u251c\u2500\u2500 lib/               # Utilitaires et fonctions partag\u00e9es\n\u2502   \u251c\u2500\u2500axios           # Axios\n\u2502   \u251c\u2500\u2500constants       # Constantes\n\u2502   \u251c\u2500\u2500enums           # Enums\n\u2502   \u251c\u2500\u2500interfaces      # Interfaces\n\u2502   \u251c\u2500\u2500middleware      # Middleware\n\u2502   \u251c\u2500\u2500services        # Services\n\u2502   \u251c\u2500\u2500sql             # Backup SQL BDD\n\u2502   \u251c\u2500\u2500store           # Store\n\u2502   \u251c\u2500\u2500utils           # Utilitaires\n\u2502   \u2514\u2500\u2500validators      # Validators\n\u2502       \u2514\u2500\u2500...         \n\u251c\u2500\u2500 prisma/            # Configuration Prisma\n\u2502   \u251c\u2500\u2500 schema.prisma  # Sch\u00e9ma de base de donn\u00e9es\n\u2502   \u2514\u2500\u2500 migrations/    # Migrations de base de donn\u00e9es\n\u251c\u2500\u2500 public/            # Fichiers statiques\n\u251c\u2500\u2500 styles/            # Fichiers CSS/SCSS\n\u251c\u2500\u2500 .env               # Variables d'environnement\n\u251c\u2500\u2500 .env.prod          # Variables d'environnement de production\n\u251c\u2500\u2500 cypress.config.ts  # Configuration Cypress\n\u251c\u2500\u2500 tailwind.config.ts # Configuration Tailwind\n\u251c\u2500\u2500 tsconfig.json      # Configuration TypeScript\n\u251c\u2500\u2500 minio.config.ts    # Configuration Minio\n\u251c\u2500\u2500 middleware.ts      # Middleware NextJs pour les routes prot\u00e9g\u00e9es\n\u251c\u2500\u2500 docker-compose.yml # Configuration Docker\n\u251c\u2500\u2500 .gitignore         # Fichiers ignor\u00e9s par Git\n\u251c\u2500\u2500 .prettier.config.js# Configuration Prettier\n\u251c\u2500\u2500 .eslintrc.json     # Configuration ESLint\n\u251c\u2500\u2500 postcss.config.ts  # Configuration PostCSS\n\u251c\u2500\u2500 next.config.js     # Configuration NextJS\n\u251c\u2500\u2500 robot.txt          # Configuration Robot referencement SEO\n\u2514\u2500\u2500 package.json       # D\u00e9pendances\n</code></pre>"},{"location":"architecture/#vue-densemble","title":"Vue d'ensemble","text":"<p>Wisechain est une application full-stack construite avec les technologies suivantes :</p> <ul> <li>Frontend : Next.js, React, TypeScript</li> <li>Backend : API Routes Next.js, Node.js</li> <li>Base de donn\u00e9es : MySQL via Prisma ORM</li> <li>Infrastructure : Conteneurs Docker sur Scaleway</li> <li>CI/CD : Pipeline GitLab</li> </ul>"},{"location":"architecture/#architecture-des-composants","title":"Architecture des composants","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502            Client Browser           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    \u2502\n                    \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              Nginx Proxy            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    \u2502\n                    \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         Next.js Application         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Frontend     \u2502      Backend      \u2502\n\u2502     (Next)      \u2502 (API Routes Next) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2502\n                            \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Prisma Client             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    \u2502\n                    \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502            MySQL Database           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/#flux-de-donnees","title":"Flux de donn\u00e9es","text":"<ol> <li>Le navigateur client envoie une requ\u00eate au serveur</li> <li>Nginx re\u00e7oit la requ\u00eate et la transmet \u00e0 l'application Next.js</li> <li>Next.js traite la requ\u00eate :</li> <li>Si c'est une page, le rendu est effectu\u00e9 c\u00f4t\u00e9 serveur (SSR) lorsque le composant est un composant serveur side rendering</li> <li>Si c'est une API, la route API correspondante est appel\u00e9e</li> <li>Les requ\u00eates de donn\u00e9es sont g\u00e9r\u00e9es par Prisma Client</li> <li>Prisma communique avec la base de donn\u00e9es MySQL</li> <li>Les donn\u00e9es sont renvoy\u00e9es au client</li> </ol>"},{"location":"architecture/#environnements","title":"Environnements","text":"Environnement URL Description Production https://wisechain.fr Environnement de production Staging https://staging.wisechain.fr Environnement de pr\u00e9-production D\u00e9veloppement Local Environnement local des d\u00e9veloppeurs"},{"location":"architecture/#securite","title":"S\u00e9curit\u00e9","text":"<ul> <li>HTTPS : Toutes les communications sont chiffr\u00e9es via SSL/TLS</li> <li>Authentication : Syst\u00e8me d'authentification bas\u00e9 sur JWT</li> <li>Autorisation : Contr\u00f4le d'acc\u00e8s bas\u00e9 sur les r\u00f4les</li> <li>Protection des donn\u00e9es : Validation des entr\u00e9es, \u00e9chappement des sorties</li> </ul>"},{"location":"architecture/#scalabilite","title":"Scalabilit\u00e9","text":"<p>L'architecture est con\u00e7ue pour \u00eatre scalable horizontalement :</p> <ul> <li>Conteneurs Docker sans \u00e9tat</li> <li>Base de donn\u00e9es s\u00e9par\u00e9e</li> <li>Cache distribu\u00e9</li> </ul>"},{"location":"architecture/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ol> <li>Validation des donn\u00e9es : Utilisez zod ou joi pour valider les entr\u00e9es utilisateur</li> <li>Gestion des erreurs : Impl\u00e9mentez une gestion d'erreurs coh\u00e9rente</li> <li>Optimisation des requ\u00eates Prisma : Utilisez <code>select</code> pour limiter les champs retourn\u00e9s</li> <li>S\u00e9curit\u00e9 : Prot\u00e9gez contre les injections SQL, XSS et CSRF</li> <li>Performance : Utilisez le SSG quand c'est possible, le SSR quand n\u00e9cessaire</li> </ol>"},{"location":"ci-cd/","title":"Documentation CI/CD GitLab","text":""},{"location":"ci-cd/#introduction","title":"Introduction","text":"<p>Cette section traite de l'int\u00e9gration continue et du d\u00e9ploiement continu avec GitLab.</p>"},{"location":"ci-cd/#configuration","title":"Configuration","text":"<p>D\u00e9tails sur la configuration CI/CD.</p>"},{"location":"db/","title":"Documentation de la Base de Donn\u00e9es Wisechain","text":""},{"location":"db/#vue-densemble","title":"Vue d'ensemble","text":"<p>La base de donn\u00e9es Wisechain est une base de donn\u00e9es relationnelle MySQL g\u00e9r\u00e9e via Prisma ORM. Elle est con\u00e7ue pour stocker et g\u00e9rer les donn\u00e9es d'une plateforme d'apprentissage et de contenu avec des fonctionnalit\u00e9s communautaires.</p>"},{"location":"db/#configuration","title":"Configuration","text":"<pre><code>generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n</code></pre> <p>La connexion \u00e0 la base de donn\u00e9es est configur\u00e9e via la variable d'environnement <code>DATABASE_URL</code>.</p>"},{"location":"db/#modeles-de-donnees","title":"Mod\u00e8les de donn\u00e9es","text":""},{"location":"db/#user","title":"User","text":"<p>Table des utilisateurs de la plateforme.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de l'utilisateur firstname String Pr\u00e9nom de l'utilisateur lastname String Nom de famille de l'utilisateur pseudo String @unique Pseudonyme unique de l'utilisateur mail String @unique Adresse email unique de l'utilisateur password String Mot de passe hash\u00e9 de l'utilisateur country String @default(\"france\") Pays de l'utilisateur date_of_birth DateTime @db.Date Date de naissance roles String @default(\"suscriber\") R\u00f4le de l'utilisateur dans le syst\u00e8me profile_img String? URL de l'image de profil (optionnel) is_verified Boolean @default(false) Indique si l'utilisateur est v\u00e9rifi\u00e9 is_revoice Boolean Indique si l'utilisateur a activ\u00e9 certaines notifications created_at DateTime @default(now()) Date de cr\u00e9ation du compte <p>Relations : - One-to-Many avec <code>Article</code> (un utilisateur peut cr\u00e9er plusieurs articles) - One-to-Many avec <code>RealizeQuestionary</code> (un utilisateur peut r\u00e9aliser plusieurs questionnaires) - One-to-Many avec <code>StaffRequest</code> (un utilisateur peut envoyer plusieurs demandes au staff) - One-to-Many avec <code>CommunityMessage</code> (un utilisateur peut envoyer plusieurs messages communautaires) - One-to-Many avec <code>FictiveAccount</code> (un utilisateur peut avoir plusieurs comptes fictifs) - One-to-Many avec <code>UserReward</code> (un utilisateur peut avoir plusieurs r\u00e9compenses) - One-to-Many avec <code>UserCourse</code> (un utilisateur peut suivre plusieurs cours)</p>"},{"location":"db/#article","title":"Article","text":"<p>Table des articles publi\u00e9s sur la plateforme.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de l'article title String Titre de l'article summary String @db.Text R\u00e9sum\u00e9 de l'article img String URL de l'image principale de l'article created_at DateTime @default(now()) Date de cr\u00e9ation de l'article user_id String R\u00e9f\u00e9rence \u00e0 l'auteur de l'article category_id String R\u00e9f\u00e9rence \u00e0 la cat\u00e9gorie de l'article status String? Statut de publication de l'article <p>Relations : - Many-to-One avec <code>User</code> (un article appartient \u00e0 un utilisateur) - Many-to-One avec <code>Category</code> (un article appartient \u00e0 une cat\u00e9gorie) - One-to-Many avec <code>SequenceArticle</code> (un article peut avoir plusieurs s\u00e9quences)</p>"},{"location":"db/#sequencearticle","title":"SequenceArticle","text":"<p>Table des s\u00e9quences d'un article.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la s\u00e9quence index Int Ordre de la s\u00e9quence dans l'article title String @db.Text Titre de la s\u00e9quence containt String @db.Text Contenu de la s\u00e9quence img String? @db.Text URL de l'image de la s\u00e9quence (optionnel) article_id String R\u00e9f\u00e9rence \u00e0 l'article parent <p>Relations : - Many-to-One avec <code>Article</code> (une s\u00e9quence appartient \u00e0 un article)</p>"},{"location":"db/#course","title":"Course","text":"<p>Table des cours disponibles sur la plateforme.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique du cours main_title String Titre principal du cours description String? @db.Text Description du cours (optionnel) img String URL de l'image du cours content String @db.Text Contenu principal du cours created_at DateTime @default(now()) Date de cr\u00e9ation du cours update_at DateTime @updatedAt @db.Date Date de derni\u00e8re mise \u00e0 jour category_id String R\u00e9f\u00e9rence \u00e0 la cat\u00e9gorie du cours difficulty String @default(\"Facile\") Niveau de difficult\u00e9 du cours status String? Statut de publication du cours <p>Relations : - Many-to-One avec <code>Category</code> (un cours appartient \u00e0 une cat\u00e9gorie) - One-to-Many avec <code>Sequence</code> (un cours peut avoir plusieurs s\u00e9quences) - Many-to-Many avec <code>Tool</code> via <code>ToolCourse</code> (un cours peut utiliser plusieurs outils) - One-to-Many avec <code>Questionary</code> (un cours peut avoir plusieurs questionnaires) - One-to-Many avec <code>UserCourse</code> (un cours peut \u00eatre suivi par plusieurs utilisateurs)</p>"},{"location":"db/#sequence","title":"Sequence","text":"<p>Table des s\u00e9quences d'un cours.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la s\u00e9quence index Int Ordre de la s\u00e9quence dans le cours title String @db.Text Titre de la s\u00e9quence containt String @db.Text Contenu de la s\u00e9quence img String? @db.Text URL de l'image de la s\u00e9quence (optionnel) course_id String R\u00e9f\u00e9rence au cours parent <p>Relations : - Many-to-One avec <code>Course</code> (une s\u00e9quence appartient \u00e0 un cours)</p>"},{"location":"db/#questionary","title":"Questionary","text":"<p>Table des questionnaires d'\u00e9valuation.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique du questionnaire subject String @db.VarChar(150) Sujet du questionnaire creator String Cr\u00e9ateur du questionnaire created_at DateTime @default(now()) Date de cr\u00e9ation courseId String? R\u00e9f\u00e9rence au cours associ\u00e9 (optionnel) <p>Relations : - One-to-Many avec <code>RealizeQuestionary</code> (un questionnaire peut \u00eatre r\u00e9alis\u00e9 plusieurs fois) - One-to-Many avec <code>Reward</code> (un questionnaire peut offrir plusieurs r\u00e9compenses) - One-to-Many avec <code>Question</code> (un questionnaire contient plusieurs questions) - One-to-Many avec <code>Answer</code> (un questionnaire contient plusieurs r\u00e9ponses) - Many-to-One avec <code>Course</code> (un questionnaire peut \u00eatre associ\u00e9 \u00e0 un cours)</p>"},{"location":"db/#question","title":"Question","text":"<p>Table des questions dans les questionnaires.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la question question String @db.VarChar(255) Texte de la question questionary_id String R\u00e9f\u00e9rence au questionnaire parent <p>Relations : - Many-to-One avec <code>Questionary</code> (une question appartient \u00e0 un questionnaire) - One-to-Many avec <code>Answer</code> (une question peut avoir plusieurs r\u00e9ponses)</p>"},{"location":"db/#answer","title":"Answer","text":"<p>Table des r\u00e9ponses aux questions.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la r\u00e9ponse answer String @db.VarChar(255) Texte de la r\u00e9ponse correct_answer Boolean Indique si c'est la bonne r\u00e9ponse questionary_id String R\u00e9f\u00e9rence au questionnaire parent question_id String R\u00e9f\u00e9rence \u00e0 la question parent <p>Relations : - Many-to-One avec <code>Questionary</code> (une r\u00e9ponse appartient \u00e0 un questionnaire) - Many-to-One avec <code>Question</code> (une r\u00e9ponse appartient \u00e0 une question)</p>"},{"location":"db/#realizequestionary","title":"RealizeQuestionary","text":"<p>Table des r\u00e9alisations de questionnaires par les utilisateurs.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la r\u00e9alisation score Int Score obtenu date_of_realize_questionary DateTime @default(now()) Date de r\u00e9alisation user_id String R\u00e9f\u00e9rence \u00e0 l'utilisateur questionary_id String R\u00e9f\u00e9rence au questionnaire <p>Relations : - Many-to-One avec <code>User</code> (une r\u00e9alisation appartient \u00e0 un utilisateur) - Many-to-One avec <code>Questionary</code> (une r\u00e9alisation concerne un questionnaire)</p>"},{"location":"db/#reward","title":"Reward","text":"<p>Table des r\u00e9compenses disponibles.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la r\u00e9compense is_claim Boolean Indique si la r\u00e9compense a \u00e9t\u00e9 r\u00e9clam\u00e9e date_of_claim DateTime? @db.Date Date de r\u00e9clamation (optionnel) questionary_id String R\u00e9f\u00e9rence au questionnaire associ\u00e9 <p>Relations : - Many-to-One avec <code>Questionary</code> (une r\u00e9compense est associ\u00e9e \u00e0 un questionnaire) - One-to-Many avec <code>UserReward</code> (une r\u00e9compense peut \u00eatre attribu\u00e9e \u00e0 plusieurs utilisateurs)</p>"},{"location":"db/#userreward","title":"UserReward","text":"<p>Table de jonction entre utilisateurs et r\u00e9compenses.</p> Colonne Type Attributs Description user_id String R\u00e9f\u00e9rence \u00e0 l'utilisateur reward_id String R\u00e9f\u00e9rence \u00e0 la r\u00e9compense <p>Cl\u00e9 primaire composite : <code>[reward_id, user_id]</code></p> <p>Relations : - Many-to-One avec <code>User</code> (une attribution appartient \u00e0 un utilisateur) - Many-to-One avec <code>Reward</code> (une attribution concerne une r\u00e9compense)</p>"},{"location":"db/#usercourse","title":"UserCourse","text":"<p>Table de suivi des cours par les utilisateurs.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique user_id String R\u00e9f\u00e9rence \u00e0 l'utilisateur course_id String R\u00e9f\u00e9rence au cours progress Float @default(0.0) Progression dans le cours (0-100%) is_completed Boolean @default(false) Indique si le cours est termin\u00e9 last_accessed DateTime @default(now()) Derni\u00e8re date d'acc\u00e8s started_at DateTime? Date de d\u00e9but du cours (optionnel) completed_at DateTime? Date de fin du cours (optionnel) <p>Contrainte d'unicit\u00e9 : <code>[user_id, course_id]</code></p> <p>Relations : - Many-to-One avec <code>User</code> (un suivi appartient \u00e0 un utilisateur) - Many-to-One avec <code>Course</code> (un suivi concerne un cours)</p>"},{"location":"db/#category","title":"Category","text":"<p>Table des cat\u00e9gories pour les articles et cours.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la cat\u00e9gorie name String @unique Nom unique de la cat\u00e9gorie <p>Relations : - One-to-Many avec <code>Article</code> (une cat\u00e9gorie peut contenir plusieurs articles) - One-to-Many avec <code>Course</code> (une cat\u00e9gorie peut contenir plusieurs cours)</p>"},{"location":"db/#tool","title":"Tool","text":"<p>Table des outils utilis\u00e9s dans les cours.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de l'outil name String @db.VarChar(150) Nom de l'outil link String @db.VarChar(200) Lien vers l'outil img String @db.Text URL de l'image de l'outil <p>Relations : - Many-to-Many avec <code>Course</code> via <code>ToolCourse</code> (un outil peut \u00eatre utilis\u00e9 dans plusieurs cours)</p>"},{"location":"db/#toolcourse","title":"ToolCourse","text":"<p>Table de jonction entre outils et cours.</p> Colonne Type Attributs Description course_id String R\u00e9f\u00e9rence au cours tool_id String R\u00e9f\u00e9rence \u00e0 l'outil <p>Cl\u00e9 primaire composite : <code>[course_id, tool_id]</code></p> <p>Relations : - Many-to-One avec <code>Course</code> (une association appartient \u00e0 un cours) - Many-to-One avec <code>Tool</code> (une association concerne un outil)</p>"},{"location":"db/#staffrequest","title":"StaffRequest","text":"<p>Table des demandes adress\u00e9es au staff.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de la demande subject String @db.VarChar(150) Sujet de la demande message String @db.Text Contenu de la demande date_sending DateTime @db.Date Date d'envoi user_id String R\u00e9f\u00e9rence \u00e0 l'utilisateur <p>Relations : - Many-to-One avec <code>User</code> (une demande est envoy\u00e9e par un utilisateur)</p>"},{"location":"db/#communitymessage","title":"CommunityMessage","text":"<p>Table des messages communautaires.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique du message subject String @db.VarChar(150) Sujet du message content String @db.Text Contenu du message user_id String R\u00e9f\u00e9rence \u00e0 l'utilisateur <p>Relations : - Many-to-One avec <code>User</code> (un message est envoy\u00e9 par un utilisateur)</p>"},{"location":"db/#fictiveaccount","title":"FictiveAccount","text":"<p>Table des comptes fictifs pour les simulations.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique du compte solde Int Solde du compte number_account Int Num\u00e9ro du compte user_id String R\u00e9f\u00e9rence \u00e0 l'utilisateur <p>Relations : - Many-to-One avec <code>User</code> (un compte fictif appartient \u00e0 un utilisateur)</p>"},{"location":"db/#glossary","title":"Glossary","text":"<p>Table du glossaire des termes.</p> Colonne Type Attributs Description id String @id @default(cuid()) Identifiant unique de l'entr\u00e9e title String @unique Terme unique du glossaire definition String @db.Text D\u00e9finition du terme created_at DateTime @default(now()) Date de cr\u00e9ation"},{"location":"db/#diagramme-des-relations","title":"Diagramme des relations","text":"<pre><code>User 1--* Article\nUser 1--* RealizeQuestionary\nUser 1--* StaffRequest\nUser 1--* CommunityMessage\nUser 1--* FictiveAccount\nUser 1--* UserReward\nUser 1--* UserCourse\n\nArticle *--1 Category\nArticle 1--* SequenceArticle\n\nCourse *--1 Category\nCourse 1--* Sequence\nCourse *--* Tool (via ToolCourse)\nCourse 1--* Questionary\nCourse 1--* UserCourse\n\nQuestionary 1--* Question\nQuestionary 1--* Answer\nQuestionary 1--* RealizeQuestionary\nQuestionary 1--* Reward\n\nQuestion 1--* Answer\n\nReward 1--* UserReward\n</code></pre>"},{"location":"db/#bonnes-pratiques-dutilisation","title":"Bonnes pratiques d'utilisation","text":""},{"location":"db/#creation-dun-utilisateur","title":"Cr\u00e9ation d'un utilisateur","text":"<pre><code>const newUser = await prisma.user.create({\n  data: {\n    firstname: \"John\",\n    lastname: \"Doe\",\n    pseudo: \"johndoe\",\n    mail: \"john.doe@example.com\",\n    password: hashedPassword,\n    date_of_birth: new Date(\"1990-01-01\"),\n    is_revoice: false\n  }\n});\n</code></pre>"},{"location":"db/#recuperation-dun-cours-avec-ses-sequences","title":"R\u00e9cup\u00e9ration d'un cours avec ses s\u00e9quences","text":"<pre><code>const course = await prisma.course.findUnique({\n  where: { id: courseId },\n  include: {\n    sequences: {\n      orderBy: { index: 'asc' }\n    },\n    category: true,\n    tool_courses: {\n      include: { tool: true }\n    }\n  }\n});\n</code></pre>"},{"location":"db/#suivi-de-progression-dun-utilisateur","title":"Suivi de progression d'un utilisateur","text":"<pre><code>const userProgress = await prisma.userCourse.upsert({\n  where: {\n    user_id_course_id: {\n      user_id: userId,\n      course_id: courseId\n    }\n  },\n  update: {\n    progress: newProgress,\n    last_accessed: new Date(),\n    is_completed: newProgress &gt;= 100,\n    completed_at: newProgress &gt;= 100 ? new Date() : null\n  },\n  create: {\n    user_id: userId,\n    course_id: courseId,\n    progress: newProgress,\n    started_at: new Date(),\n    is_completed: false\n  }\n});\n</code></pre>"},{"location":"db/#migrations-et-gestion-du-schema","title":"Migrations et gestion du sch\u00e9ma","text":""},{"location":"db/#creation-dune-migration","title":"Cr\u00e9ation d'une migration","text":"<pre><code>npx prisma migrate dev --name nom_de_la_migration\n</code></pre>"},{"location":"db/#application-des-migrations-en-production","title":"Application des migrations en production","text":"<pre><code>npx prisma migrate deploy\n</code></pre>"},{"location":"db/#reinitialisation-de-la-base-de-donnees-developpement-uniquement","title":"R\u00e9initialisation de la base de donn\u00e9es (d\u00e9veloppement uniquement)","text":"<pre><code>npx prisma migrate reset\n</code></pre>"},{"location":"db/#securite-et-bonnes-pratiques","title":"S\u00e9curit\u00e9 et bonnes pratiques","text":"<ol> <li>Ne jamais stocker de mots de passe en clair - Toujours utiliser des algorithmes de hachage comme bcrypt</li> <li>Utiliser des transactions pour les op\u00e9rations qui modifient plusieurs tables</li> <li>Valider les entr\u00e9es utilisateur avant de les enregistrer dans la base de donn\u00e9es</li> <li>Limiter les permissions de l'utilisateur de base de donn\u00e9es en production</li> <li>Sauvegarder r\u00e9guli\u00e8rement la base de donn\u00e9es</li> <li>Utiliser des index pour optimiser les requ\u00eates fr\u00e9quentes</li> <li>\u00c9viter les requ\u00eates N+1 en utilisant les fonctionnalit\u00e9s <code>include</code> de Prisma</li> </ol>"},{"location":"deploiement/","title":"D\u00e9ploiement","text":""},{"location":"deploiement/#i-configuration-du-serveur-debian","title":"\ud83d\udda5\ufe0f I - Configuration du Serveur Debian","text":""},{"location":"deploiement/#1-connexion-en-ssh","title":"1\ufe0f\u20e3 Connexion en SSH","text":"<pre><code>ssh root@ip\n</code></pre>"},{"location":"deploiement/#2-enregistrement-de-la-cle-ssh","title":"2\ufe0f\u20e3 Enregistrement de la cl\u00e9 SSH","text":"<pre><code>ssh-copy-id root@ip\n</code></pre>"},{"location":"deploiement/#3-mise-a-jour-des-paquets","title":"3\ufe0f\u20e3 Mise \u00e0 jour des paquets","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre>"},{"location":"deploiement/#4-installation-des-dependances-docker","title":"4\ufe0f\u20e3 Installation des d\u00e9pendances Docker","text":"<pre><code>sudo apt install apt-transport-https ca-certificates curl software-properties-common -y\n</code></pre>"},{"location":"deploiement/#5-ajout-des-cles-et-depots-docker","title":"5\ufe0f\u20e3 Ajout des cl\u00e9s et d\u00e9p\u00f4ts Docker","text":"<p>Ajoutez la cl\u00e9 GPG officielle : <pre><code>curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n</code></pre> Ajoutez le d\u00e9p\u00f4t Docker : <pre><code>echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> Mettez \u00e0 jour les paquets : <pre><code>sudo apt update\n</code></pre></p>"},{"location":"deploiement/#6-installation-et-configuration-de-docker","title":"6\ufe0f\u20e3 Installation et configuration de Docker","text":"<p><pre><code>sudo apt install docker-ce -y\nsudo systemctl start docker\nsudo systemctl enable docker\n</code></pre> Cr\u00e9ation du r\u00e9pertoire : <pre><code>mkdir -p /sites/nom-du-site\n</code></pre></p>"},{"location":"deploiement/#7-gestion-des-utilisateurs","title":"7\ufe0f\u20e3 Gestion des utilisateurs","text":"<p>Ajoutez un utilisateur : <pre><code>sudo adduser user-name\n</code></pre> Ajoutez-le au groupe Docker : <pre><code>sudo usermod -aG docker user-name\n</code></pre></p>"},{"location":"deploiement/#ii-docker-build","title":"\ud83d\udc33 II - Docker Build","text":""},{"location":"deploiement/#1-build-et-push-des-images-docker","title":"1\ufe0f\u20e3 Build et Push des images Docker","text":"<pre><code>docker build --platform=linux/amd64 -t name-image/xxx:1.0 ./front\ndocker push name-image/xxx:1.0\n</code></pre>"},{"location":"deploiement/#2-deploiement-avec-docker-compose","title":"2\ufe0f\u20e3 D\u00e9ploiement avec Docker Compose","text":"<p>Copiez les fichiers sur le serveur : <pre><code>scp -r back/.env.prod root@ip:/sites/nom-du-site\nscp -r front/.env root@ip:/sites/nom-du-site\nscp -r docker-compose.yml root@ip:/sites/nom-du-site\n</code></pre> Initialisez Docker Swarm et d\u00e9ployez : <pre><code>docker swarm init\ndocker stack deploy -c /sites/nom-du-site/docker-compose.yml site1\n</code></pre></p>"},{"location":"deploiement/#iii-installation-de-nginx","title":"\ud83c\udf10 III - Installation de Nginx","text":""},{"location":"deploiement/#1-installation-de-base","title":"1\ufe0f\u20e3 Installation de base","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\nsudo apt install nginx -y\nsudo systemctl start nginx\nsudo systemctl enable nginx\nsudo ufw allow 80\nsudo ufw allow 443\n</code></pre>"},{"location":"deploiement/#2-configuration-du-reverse-proxy","title":"2\ufe0f\u20e3 Configuration du Reverse Proxy","text":"<p><pre><code>sudo nano /etc/nginx/sites-available/nom-du-site\n</code></pre> Exemple de configuration : <pre><code>server {\n    listen 80;\n    server_name sous-domaine.domaine.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:81;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n    }\n}\n</code></pre> Activation : <pre><code>sudo ln -s /etc/nginx/sites-available/nom-du-site /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl restart nginx\n</code></pre></p>"},{"location":"deploiement/#iv-installation-de-certbot","title":"\ud83d\udd12 IV - Installation de Certbot","text":""},{"location":"deploiement/#1-generation-de-certificat-ssl","title":"1\ufe0f\u20e3 G\u00e9n\u00e9ration de certificat SSL","text":"<pre><code>sudo apt install certbot python3-certbot-nginx -y\nsudo certbot --nginx\n</code></pre>"},{"location":"deploiement/#2-renouvellement-automatique","title":"2\ufe0f\u20e3 Renouvellement automatique","text":"<pre><code>echo \"0 0 * * * certbot renew --quiet\" | sudo tee -a /etc/crontab &gt; /dev/null\n</code></pre>"},{"location":"deploiement/#3-passer-minio-en-ssl-optionnel","title":"3\ufe0f\u20e3 Passer Minio en SSL (optionnel)","text":"<p><pre><code>sudo certbot certonly --standalone -d s3.nom-du-site.fr\n</code></pre> Ajout au <code>docker-compose.yml</code> : <pre><code>services:\n  s3:\n    image: minio/minio:latest\n    environment:\n      MINIO_ROOT_USER: user\n      MINIO_ROOT_PASSWORD: password\n    ports:\n      - \"9000:9000\"\n      - \"8900:8900\"\n    volumes:\n      - minio:/data/minio\n      - /etc/letsencrypt/live/s3.nom-du-site.fr/fullchain.pem:/root/.minio/certs/public.crt:ro\n      - /etc/letsencrypt/live/s3.nom-du-site.fr/privkey.pem:/root/.minio/certs/private.key:ro\n    command: 'minio server /data/minio --console-address \":8900\"'\n</code></pre></p> \u2705 **Votre d\u00e9ploiement est maintenant pr\u00eat !** \ud83c\udf89 <p> N'h\u00e9sitez pas \u00e0 me contacter pour toute question ou demande de support. </p> <p> Email: wisechainnet@gmail.com</p>"},{"location":"hosting/","title":"Guide de D\u00e9ploiement sur Scaleway avec Docker","text":""},{"location":"hosting/#introduction","title":"Introduction","text":"<p>Ce guide explique comment d\u00e9ployer l'application wisechain sur Scaleway en utilisant Docker.</p>"},{"location":"hosting/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Un compte Scaleway</li> <li>Docker et Docker Compose install\u00e9s localement</li> <li>Acc\u00e8s au registre d'images Docker (DockerHub, GitLab Registry, etc.)</li> <li>Cl\u00e9s SSH configur\u00e9es</li> </ul>"},{"location":"hosting/#architecture-de-deploiement","title":"Architecture de d\u00e9ploiement","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 Scaleway Cloud                  \u2502\n\u2502                                                 \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\n\u2502  \u2502             \u2502       \u2502                     \u2502  \u2502\n\u2502  \u2502  Instance   \u2502       \u2502  Database Instance  \u2502  \u2502\n\u2502  \u2502  (Docker)   \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u25ba\u2502  (MySQL)            \u2502  \u2502\n\u2502  \u2502             \u2502       \u2502                     \u2502  \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2502        \u2502                                        \u2502\n\u2502        \u2502       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u2502\n\u2502        \u2502       \u2502                     \u2502          \u2502\n\u2502        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502  Object Storage     \u2502          \u2502\n\u2502                \u2502  (S3 compatible)    \u2502          \u2502\n\u2502                \u2502                     \u2502          \u2502\n\u2502                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"hosting/#configuration-de-linstance-scaleway","title":"Configuration de l'instance Scaleway","text":""},{"location":"hosting/#1-creation-dune-instance","title":"1. Cr\u00e9ation d'une instance","text":"<ol> <li>Connectez-vous \u00e0 la console Scaleway</li> <li>Naviguez vers Instances &gt; Create Instance</li> <li>S\u00e9lectionnez une instance de type DEV1-L (4 vCPUs, 8 GB RAM)</li> <li>Choisissez Debian 11 comme syst\u00e8me d'exploitation</li> <li>Ajoutez votre cl\u00e9 SSH</li> <li>Cr\u00e9ez l'instance</li> </ol>"},{"location":"hosting/#2-configuration-du-reseau","title":"2. Configuration du r\u00e9seau","text":"<ol> <li>Allez dans Network &gt; Security Groups</li> <li>Cr\u00e9ez un nouveau groupe de s\u00e9curit\u00e9 pour votre application</li> <li>Autorisez les ports suivants :</li> <li>22 (SSH)</li> <li>80 (HTTP)</li> <li>443 (HTTPS)</li> <li>Associez ce groupe de s\u00e9curit\u00e9 \u00e0 votre instance</li> </ol>"},{"location":"hosting/#3-configuration-dns","title":"3. Configuration DNS","text":"<ol> <li>Achetez un nom de domaine ou utilisez un existant</li> <li>Configurez les enregistrements DNS pour pointer vers l'IP de votre instance :</li> <li>Type A : <code>wisechain.fr</code> \u2192 <code>&lt;IP_INSTANCE&gt;</code></li> <li>Type A : <code>www.wisechain.fr</code> \u2192 <code>&lt;IP_INSTANCE&gt;</code></li> <li>Type A : <code>api.wisechain.fr</code> \u2192 <code>&lt;IP_INSTANCE&gt;</code></li> </ol>"},{"location":"hosting/#configuration-de-la-base-de-donnees","title":"Configuration de la base de donn\u00e9es","text":""},{"location":"hosting/#1-creation-dune-base-de-donnees-managee","title":"1. Cr\u00e9ation d'une base de donn\u00e9es manag\u00e9e","text":"<ol> <li>Allez dans Databases &gt; Create a Database</li> <li>S\u00e9lectionnez MySQL</li> <li>Choisissez un plan adapt\u00e9 \u00e0 vos besoins (Start-S est suffisant pour commencer)</li> <li>Configurez un utilisateur et un mot de passe s\u00e9curis\u00e9</li> <li>Notez les informations de connexion</li> </ol>"},{"location":"hosting/#2-configuration-de-la-base-de-donnees","title":"2. Configuration de la base de donn\u00e9es","text":"<ol> <li>Connectez-vous \u00e0 la base de donn\u00e9es via un client MySQL</li> <li>Cr\u00e9ez une base de donn\u00e9es pour votre application :    <pre><code>CREATE DATABASE wisechain CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n</code></pre></li> </ol>"},{"location":"hosting/#deploiement-avec-docker","title":"D\u00e9ploiement avec Docker","text":""},{"location":"hosting/#1-preparation-des-images-docker","title":"1. Pr\u00e9paration des images Docker","text":"<p>Construisez et publiez vos images Docker :</p> <pre><code># Construction de l'image\ndocker build -t registry.example.com/wisechain/frontend:latest ./frontend\ndocker build -t registry.example.com/wisechain/backend:latest ./backend\n\n# Publication des images\ndocker push registry.example.com/wisechain/frontend:latest\ndocker push registry.example.com/wisechain/backend:latest\n</code></pre>"},{"location":"hosting/#2-configuration-sur-linstance-scaleway","title":"2. Configuration sur l'instance Scaleway","text":"<p>Connectez-vous \u00e0 votre instance :</p> <pre><code>ssh root@&lt;IP_INSTANCE&gt;\n</code></pre> <p>Installez Docker et Docker Compose :</p> <pre><code># Mise \u00e0 jour des paquets\napt update &amp;&amp; apt upgrade -y\n\n# Installation des d\u00e9pendances\napt install apt-transport-https ca-certificates curl software-properties-common -y\n\n# Ajout de la cl\u00e9 GPG Docker\ncurl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Ajout du d\u00e9p\u00f4t Docker\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# Mise \u00e0 jour et installation de Docker\napt update\napt install docker-ce docker-compose -y\n\n# D\u00e9marrage et activation de Docker\nsystemctl start docker\nsystemctl enable docker\n</code></pre>"},{"location":"hosting/#3-creation-du-fichier-docker-composeyml","title":"3. Cr\u00e9ation du fichier docker-compose.yml","text":"<p>Cr\u00e9ez un r\u00e9pertoire pour votre application :</p> <pre><code>mkdir -p /opt/wisechain\ncd /opt/wisechain\n</code></pre> <p>Cr\u00e9ez le fichier docker-compose.yml :</p> <pre><code>version: \"3.8\"\n\nservices:\n  s3:\n    image: minio/minio:latest\n    environment:\n      MINIO_ROOT_USER: site-name\n      MINIO_ROOT_PASSWORD: site-password\n    ports:\n      - 9000:9000\n      - 8900:8900\n    volumes:\n      - minio:/data/minio\n      - /etc/letsencrypt/live/folder-root/.minio/certs/public.crt:ro\n      - /etc/letsencrypt/live/folder-root/.minio/certs/private.key:ro\n    command: 'minio server /data/minio --console-address \":8900\"'\n\nnetworks:\n  faable-network:\n    driver: overlay\n\nvolumes:\n  minio:\n    driver: local\n</code></pre>"},{"location":"hosting/#4-configuration-nginx","title":"4. Configuration Nginx","text":"<p>Cr\u00e9ez le r\u00e9pertoire pour la configuration Nginx :</p> <pre><code>mkdir -p /opt/wisechain/nginx\n</code></pre> <p>Cr\u00e9ez le fichier de configuration Nginx :</p> <pre><code>cat &gt; /opt/site-name/nginx/default.conf &lt;&lt; 'EOF'\nserver {\n    listen 80;\n    server_name site-name.fr www.site-name.fr;\n\n    location /.well-known/acme-challenge/ {\n        root /var/www/certbot;\n    }\n\n    location / {\n        return 301 https://$host$request_uri;\n    }\n}\n\nserver {\n    listen 443 ssl;\n    server_name site-name.fr www.site-name.fr;\n\n    ssl_certificate /etc/letsencrypt/live/site-name.fr/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/site-name.fr/privkey.pem;\n\n    location / {\n        proxy_pass http://frontend:PORT_FRONTEND;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n\nserver {\n    listen 80;\n    server_name api.site-name.fr;\n\n    location /.well-known/acme-challenge/ {\n        root /var/www/certbot;\n    }\n\n    location / {\n        return 301 https://$host$request_uri;\n    }\n}\n\nserver {\n    listen 443 ssl;\n    server_name api.site-name.fr;\n\n    ssl_certificate /etc/letsencrypt/live/api.site-name.fr/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/api.site-name.fr/privkey.pem;\n\n    location / {\n        proxy_pass http://backend:3001;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\nEOF\n</code></pre>"},{"location":"hosting/#5-initialisation-des-certificats-ssl","title":"5. Initialisation des certificats SSL","text":"<p>Cr\u00e9ez les r\u00e9pertoires pour Certbot :</p> <pre><code>mkdir -p /opt/site-name/certbot/conf\nmkdir -p /opt/site-name/certbot/www\n</code></pre> <p>D\u00e9marrez Nginx pour la premi\u00e8re fois :</p> <pre><code>cd /opt/site-name\ndocker-compose up -d nginx\n</code></pre> <p>Obtenez les certificats SSL :</p> <pre><code>docker-compose run --rm certbot certonly --webroot --webroot-path=/var/www/certbot --email votre@email.com --agree-tos --no-eff-email -d site-name.fr -d www.site-name.fr\ndocker-compose run --rm certbot certonly --webroot --webroot-path=/var/www/certbot --email votre@email.com --agree-tos --no-eff-email -d api.site-name.fr\n</code></pre> <p>Red\u00e9marrez Nginx pour appliquer les certificats :</p> <pre><code>docker-compose restart nginx\n</code></pre>"},{"location":"hosting/#6-demarrage-de-lapplication","title":"6. D\u00e9marrage de l'application","text":"<p>D\u00e9marrez tous les services :</p> <pre><code>docker-compose up -d\n</code></pre> <p>V\u00e9rifiez que tout fonctionne correctement :</p> <pre><code>docker-compose ps\n</code></pre>"},{"location":"hosting/#maintenance-et-mises-a-jour","title":"Maintenance et mises \u00e0 jour","text":""},{"location":"hosting/#mise-a-jour-des-images-docker","title":"Mise \u00e0 jour des images Docker","text":"<p>Pour mettre \u00e0 jour votre application :</p> <pre><code># Tirez les derni\u00e8res images\ndocker-compose pull\n\n# Red\u00e9marrez les services\ndocker-compose up -d\n</code></pre>"},{"location":"hosting/#sauvegarde-de-la-base-de-donnees","title":"Sauvegarde de la base de donn\u00e9es","text":"<p>Configurez des sauvegardes r\u00e9guli\u00e8res de votre base de donn\u00e9es :</p> <pre><code># Cr\u00e9ez un script de sauvegarde\ncat &gt; /opt/wisechain/backup.sh &lt;&lt; 'EOF'\n#!/bin/bash\nDATE=$(date +%Y-%m-%d_%H-%M-%S)\nBACKUP_DIR=\"/opt/wisechain/backups\"\n\n# Cr\u00e9ez le r\u00e9pertoire de sauvegarde s'il n'existe pas\nmkdir -p $BACKUP_DIR\n\n# Variables de connexion \u00e0 la base de donn\u00e9es\nDB_HOST=\"db-mysql-fra1-12345-do-user-12345-0.b.db.ondigitalocean.com\"\nDB_PORT=\"25060\"\nDB_USER=\"user\"\nDB_PASS=\"password\"\nDB_NAME=\"wisechain\"\n\n# Sauvegarde de la base de donn\u00e9es\nmysqldump --host=$DB_HOST --port=$DB_PORT --user=$DB_USER --password=$DB_PASS --ssl-mode=REQUIRED $DB_NAME &gt; $BACKUP_DIR/wisechain_$DATE.sql\n\n# Compression de la sauvegarde\ngzip $BACKUP_DIR/wisechain_$DATE.sql\n\n# Suppression des sauvegardes de plus de 30 jours\nfind $BACKUP_DIR -name \"wisechain_*.sql.gz\" -type f -mtime +30 -delete\n\n# Log\necho \"Sauvegarde termin\u00e9e: $BACKUP_DIR/wisechain_$DATE.sql.gz\" &gt;&gt; $BACKUP_DIR/backup.log\nEOF\n\n# Rendre le script ex\u00e9cutable\nchmod +x /opt/wisechain/backup.sh\n\n# Ajouter une t\u00e2che cron pour ex\u00e9cuter le script quotidiennement\n(crontab -l 2&gt;/dev/null; echo \"0 2 * * * /opt/wisechain/backup.sh\") | crontab -\n</code></pre>"},{"location":"hosting/#monitoring","title":"Monitoring","text":"<p>Pour surveiller votre application, vous pouvez utiliser des outils comme Prometheus et Grafana :</p> <pre><code># Cr\u00e9ez un r\u00e9pertoire pour le monitoring\nmkdir -p /opt/wisechain/monitoring\n\n# Cr\u00e9ez un fichier docker-compose pour le monitoring\ncat &gt; /opt/wisechain/monitoring/docker-compose.yml &lt;&lt; 'EOF'\nversion: '3.8'\n\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    volumes:\n      - ./prometheus:/etc/prometheus\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n      - '--web.enable-lifecycle'\n    ports:\n      - \"9090:9090\"\n    restart: always\n    networks:\n      - monitoring-network\n\n  grafana:\n    image: grafana/grafana:latest\n    volumes:\n      - grafana_data:/var/lib/grafana\n    environment:\n      - GF_SECURITY_ADMIN_USER=admin\n      - GF_SECURITY_ADMIN_PASSWORD=secure_password\n      - GF_USERS_ALLOW_SIGN_UP=false\n    ports:\n      - \"3100:3000\"\n    restart: always\n    networks:\n      - monitoring-network\n\n  node-exporter:\n    image: prom/node-exporter:latest\n    volumes:\n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /:/rootfs:ro\n    command:\n      - '--path.procfs=/host/proc'\n      - '--path.rootfs=/rootfs'\n      - '--path.sysfs=/host/sys'\n      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'\n    ports:\n      - \"9100:9100\"\n    restart: always\n    networks:\n      - monitoring-network\n\n  cadvisor:\n    image: gcr.io/cadvisor/cadvisor:latest\n    volumes:\n      - /:/rootfs:ro\n      - /var/run:/var/run:ro\n      - /sys:/sys:ro\n      - /var/lib/docker/:/var/lib/docker:ro\n      - /dev/disk/:/dev/disk:ro\n    ports:\n      - \"8080:8080\"\n    restart: always\n    networks:\n      - monitoring-network\n\nnetworks:\n  monitoring-network:\n    driver: bridge\n\nvolumes:\n  prometheus_data:\n  grafana_data:\nEOF\n\n# Cr\u00e9ez la configuration Prometheus\nmkdir -p /opt/wisechain/monitoring/prometheus\ncat &gt; /opt/wisechain/monitoring/prometheus/prometheus.yml &lt;&lt; 'EOF'\nglobal:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n\n  - job_name: 'node-exporter'\n    static_configs:\n      - targets: ['node-exporter:9100']\n\n  - job_name: 'cadvisor'\n    static_configs:\n      - targets: ['cadvisor:8080']\nEOF\n\n# D\u00e9marrez les services de monitoring\ncd /opt/wisechain/monitoring\ndocker-compose up -d\n</code></pre>"},{"location":"hosting/#securite","title":"S\u00e9curit\u00e9","text":""},{"location":"hosting/#pare-feu","title":"Pare-feu","text":"<p>Configurez un pare-feu pour limiter l'acc\u00e8s \u00e0 votre serveur :</p> <pre><code># Installation de UFW\napt install ufw -y\n\n# Configuration des r\u00e8gles de base\nufw default deny incoming\nufw default allow outgoing\nufw allow ssh\nufw allow http\nufw allow https\n\n# Activation du pare-feu\nufw enable\n</code></pre>"},{"location":"hosting/#mises-a-jour-de-securite-automatiques","title":"Mises \u00e0 jour de s\u00e9curit\u00e9 automatiques","text":"<p>Configurez des mises \u00e0 jour de s\u00e9curit\u00e9 automatiques :</p> <pre><code>apt install unattended-upgrades -y\ndpkg-reconfigure -plow unattended-upgrades\n</code></pre>"},{"location":"hosting/#depannage","title":"D\u00e9pannage","text":""},{"location":"hosting/#verification-des-logs","title":"V\u00e9rification des logs","text":"<p>Pour v\u00e9rifier les logs des conteneurs :</p> <pre><code># Logs de tous les services\ndocker-compose logs\n\n# Logs d'un service sp\u00e9cifique\ndocker-compose logs frontend\ndocker-compose logs backend\ndocker-compose logs nginx\n</code></pre>"},{"location":"hosting/#redemarrage-des-services","title":"Red\u00e9marrage des services","text":"<p>Si un service ne fonctionne pas correctement :</p> <pre><code># Red\u00e9marrer un service sp\u00e9cifique\ndocker-compose restart frontend\n\n# Red\u00e9marrer tous les services\ndocker-compose restart\n</code></pre>"},{"location":"hosting/#problemes-courants","title":"Probl\u00e8mes courants","text":"<ol> <li>Certificats SSL expir\u00e9s : Ex\u00e9cutez <code>docker-compose run --rm certbot renew</code></li> <li>Base de donn\u00e9es inaccessible : V\u00e9rifiez les informations de connexion et le pare-feu</li> <li>Erreur 502 Bad Gateway : V\u00e9rifiez que les services backend et frontend sont en cours d'ex\u00e9cution</li> </ol>"},{"location":"hosting/#conclusion","title":"Conclusion","text":"<p>Vous avez maintenant d\u00e9ploy\u00e9 avec succ\u00e8s votre application Wisechain sur Scaleway en utilisant Docker. Cette configuration vous offre :</p> <ul> <li>Un environnement isol\u00e9 et reproductible gr\u00e2ce \u00e0 Docker</li> <li>Une s\u00e9curisation via HTTPS avec Let's Encrypt</li> <li>Un reverse proxy avec Nginx</li> <li>Des sauvegardes automatiques de la base de donn\u00e9es</li> <li>Un syst\u00e8me de monitoring pour surveiller les performances</li> </ul> <p>Pour toute question ou assistance suppl\u00e9mentaire, n'h\u00e9sitez pas \u00e0 contacter l'\u00e9quipe Wisechain \u00e0 l'adresse support@wisechain.fr.</p>"},{"location":"overview/","title":"Vue d'ensemble du d\u00e9ploiement","text":"<p>Cette documentation vous guidera \u00e0 travers le processus complet de d\u00e9ploiement d'une application Wisechain sur un serveur Debian.</p>"},{"location":"overview/#etapes-principales","title":"\u00c9tapes principales","text":"<p>Le d\u00e9ploiement se d\u00e9roule en quatre \u00e9tapes principales :</p> <ol> <li>Configuration du Serveur Debian - Pr\u00e9paration de l'environnement serveur</li> <li>Docker Build - Construction et d\u00e9ploiement des images Docker</li> <li>Installation de Nginx - Configuration du serveur web et du reverse proxy</li> <li>Installation de Certbot - S\u00e9curisation avec SSL/TLS</li> </ol> <p>Suivez les guides d\u00e9taill\u00e9s pour chaque \u00e9tape dans les sections correspondantes.</p>"},{"location":"overview/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Un serveur Debian (version 10 ou sup\u00e9rieure)</li> <li>Acc\u00e8s SSH au serveur</li> <li>Un nom de domaine pointant vers votre serveur</li> <li>Connaissances de base en administration syst\u00e8me Linux</li> </ul>"},{"location":"test/","title":"Documentation des Tests E2E","text":""},{"location":"test/#objectifs-des-tests","title":"\ud83c\udfaf Objectifs des Tests","text":"<p>Les tests end-to-end ont \u00e9t\u00e9 impl\u00e9ment\u00e9s pour s\u00e9curiser les fonctionnalit\u00e9s critiques de l'application, particuli\u00e8rement celles impliquant :</p> <ul> <li>La gestion des donn\u00e9es utilisateurs</li> <li>La s\u00e9curit\u00e9 des acc\u00e8s</li> <li>La persistance des donn\u00e9es en base</li> </ul>"},{"location":"test/#configuration-cypress","title":"\ud83d\udee0\ufe0f Configuration Cypress","text":"<p>Les tests sont ex\u00e9cut\u00e9s avec Cypress, configur\u00e9 comme suit :</p> <pre><code>const { defineConfig } = require('cypress');\n\nmodule.exports = defineConfig({\n  e2e: {\n    baseUrl: 'http://localhost:2323', \n    specPattern: 'cypress/e2e/**/*.cy.{js,jsx,ts,tsx}',\n  },\n  video: true,\n});\n</code></pre>"},{"location":"test/#fonctionnalites-testees","title":"\ud83d\udd0d Fonctionnalit\u00e9s Test\u00e9es","text":""},{"location":"test/#1-authentification","title":"1. Authentification","text":"<ul> <li>Inscription</li> <li>Connexion</li> <li>Mise \u00e0 jour du profil</li> </ul> <p>Pourquoi ? Ces fonctionnalit\u00e9s sont critiques car elles g\u00e8rent les donn\u00e9es sensibles des utilisateurs et l'acc\u00e8s \u00e0 l'application.</p>"},{"location":"test/#2-questionnaires","title":"2. Questionnaires","text":"<ul> <li>R\u00e9alisation des quiz</li> <li>Sauvegarde des scores</li> </ul> <p>Pourquoi ? C'est le c\u0153ur fonctionnel de l'application, impliquant des interactions complexes et la persistance de donn\u00e9es.</p>"},{"location":"test/#exemples-de-tests","title":"\ud83d\udca1 Exemples de Tests","text":""},{"location":"test/#1-test-dinscription","title":"1. Test d'Inscription","text":"<pre><code>describe('Signup', () =&gt; {\n  beforeEach(() =&gt; {\n    cy.visit('/');\n    cy.wait(1500);\n    cy.get('[data-testid=\"user-menu-button\"]').click();\n    cy.get('[data-testid=\"signup-link\"]').click();\n    cy.get('[data-testid=\"terms-checkbox\"]').click();\n  });\n\n  it('should display error messages for invalid inputs', () =&gt; {\n    cy.get('[data-testid=\"firstname\"]').clear().type(CypressData.firstNameError);\n    cy.get('[data-testid=\"lastname\"]').clear().type(CypressData.lastNameError);\n    cy.get('[data-testid=\"pseudo\"]').clear().type(CypressData.pseudoError);\n    cy.get('[data-testid=\"mail\"]').clear().type(CypressData.mailError);\n    cy.get('[data-testid=\"password\"]').clear().type(CypressData.passwordError);\n    cy.get('[data-testid=\"confirmPassword\"]').clear().type(CypressData.confirmPasswordError);\n    cy.get('[data-testid=\"dateOfBirth\"]').clear().type(CypressData.birthDateErrorLess10Years);\n    cy.get('[data-testid=\"country\"]').click();\n    cy.contains(CypressData.countryError).click();\n\n    cy.contains('Le nom doit contenir au moins 3 caract\u00e8res').should('be.visible');\n    cy.contains('Le pr\u00e9nom doit contenir au moins 3 caract\u00e8res').should('be.visible');\n    cy.contains('Le pseudo doit contenir au moins 3 caract\u00e8res').should('be.visible');\n    cy.contains('Email invalide').should('be.visible');\n    cy.contains('Le mot de passe doit contenir au moins 8 caract\u00e8res, une majuscule, une minuscule, un chiffre et un caract\u00e8re sp\u00e9cial').should('be.visible');\n    cy.contains('Les mots de passe ne correspondent pas').should('be.visible');\n    cy.contains('Vous devez avoir au moins 10 ans').should('be.visible');\n  });\n  .../\n</code></pre>    Votre navigateur ne supporte pas la lecture de vid\u00e9os."},{"location":"test/#2-test-du-profil-utilisateur","title":"2. Test du Profil Utilisateur","text":"<pre><code>/...\nit('should show error for incorrect current password', () =&gt; {\n    cy.get('[data-testid=\"update-password-button\"]').click();\n    cy.get('[data-testid=\"current-password-field\"]').clear().type(CypressData.passwordLenghtError);\n    cy.get('[data-testid=\"new-password-field\"]').clear().type(CypressData.newPassword);\n    cy.get('[data-testid=\"confirm-new-password-field\"]').clear().type(CypressData.newPassword);\n    cy.contains('button', 'Enregistrer le mot de passe').click();\n    cy.get('.Toastify__toast--error')\n      .should('be.visible')\n      .and('have.text', 'Ancien mot de passe incorrect');\n  });\n\n  it('should successfully update password', () =&gt; {\n    cy.get('[data-testid=\"update-password-button\"]').click();\n    cy.get('[data-testid=\"current-password-field\"]').clear().type(CypressData.password);\n    cy.get('[data-testid=\"new-password-field\"]').clear().type(CypressData.newPassword);\n    cy.get('[data-testid=\"confirm-new-password-field\"]').clear().type(CypressData.newPassword);\n    cy.contains('button', 'Enregistrer le mot de passe').click();\n    cy.wait(1000);\n    cy.get('.Toastify__toast--success')\n      .should('be.visible')\n      .and('have.text', 'Mot de passe mis \u00e0 jour avec succ\u00e8s');\n      CypressData.password = CypressData.newPassword;\n  });\n.../\n</code></pre>    Votre navigateur ne supporte pas la lecture de vid\u00e9os."},{"location":"test/#fonctionnalites-non-testees","title":"\u274c Fonctionnalit\u00e9s Non Test\u00e9es","text":""},{"location":"test/#navigation-simple","title":"Navigation Simple","text":"<ul> <li>Menu</li> <li>Liens de base</li> <li>Affichage statique</li> </ul> <p>Pourquoi ? Ces \u00e9l\u00e9ments sont moins critiques et ne comportent pas de logique complexe ou de manipulation de donn\u00e9es.</p>"},{"location":"test/#resultats","title":"\ud83d\udcca R\u00e9sultats","text":"<p>Les tests automatis\u00e9s nous permettent de : - D\u00e9tecter rapidement les r\u00e9gressions - Valider les fonctionnalit\u00e9s critiques - Assurer la qualit\u00e9 des d\u00e9ploiements</p>"},{"location":"test/#frequence-dexecution","title":"\ud83d\udd04 Fr\u00e9quence d'Ex\u00e9cution","text":"<p>Les tests sont ex\u00e9cut\u00e9s : - \u00c0 chaque push sur la branche principale - Avant chaque d\u00e9ploiement - Sur demande pendant le d\u00e9veloppement</p> <p>Cette approche cibl\u00e9e des tests nous permet de maintenir un \u00e9quilibre entre couverture de test et efficacit\u00e9 du d\u00e9veloppement.</p>"},{"location":"versioning/","title":"Gestion des versions et branches du projet","text":""},{"location":"versioning/#vue-densemble-de-ma-strategie-de-branches","title":"Vue d'ensemble de ma strat\u00e9gie de branches","text":"<p>J'ai organis\u00e9 mon d\u00e9veloppement autour de plusieurs branches principales :</p> <ul> <li><code>main</code> : La branche principale contenant le code stable</li> <li><code>develop</code> : Ma branche de d\u00e9veloppement principal</li> <li><code>WC-2</code> \u00e0 <code>WC-12</code> : Les branches de fonctionnalit\u00e9s (feature branches)</li> </ul> <p> - Les tests sont isol\u00e9s dans une branche d\u00e9di\u00e9e</p>"},{"location":"versioning/#detail-de-mon-workflow","title":"D\u00e9tail de mon workflow","text":"<ol> <li>J'ai commenc\u00e9 par cr\u00e9er une branche <code>develop</code> \u00e0 partir de <code>main</code></li> <li>Pour chaque nouvelle fonctionnalit\u00e9, j'ai cr\u00e9\u00e9 une branche d\u00e9di\u00e9e (WC-X)</li> <li>Les premi\u00e8res fonctionnalit\u00e9s (WC-2 \u00e0 WC-4) ont \u00e9t\u00e9 d\u00e9velopp\u00e9es en parall\u00e8le</li> <li>J'ai ensuite fusionn\u00e9 ces branches dans <code>develop</code> une fois les d\u00e9veloppements termin\u00e9s</li> </ol> <ol> <li>J'ai continu\u00e9 ce processus avec les fonctionnalit\u00e9s suivantes :</li> <li>WC-5 \u00e0 WC-7 : Deuxi\u00e8me vague de d\u00e9veloppement</li> <li>WC-8 \u00e0 WC-11 : Troisi\u00e8me vague de d\u00e9veloppement</li> <li>La derni\u00e8re branche <code>test-WC-12</code> a \u00e9t\u00e9 cr\u00e9\u00e9e pour les tests finaux</li> <li>Une fois tous les tests valid\u00e9s, j'ai fusionn\u00e9 <code>develop</code> dans <code>main</code></li> </ol>"},{"location":"versioning/#points-cles-de-ma-strategie","title":"Points cl\u00e9s de ma strat\u00e9gie","text":"<ul> <li>J'ai utilis\u00e9 un workflow bas\u00e9 sur GitFlow</li> <li>Chaque fonctionnalit\u00e9 a sa propre branche</li> <li>Les fusions sont faites de mani\u00e8re r\u00e9guli\u00e8re vers <code>develop</code></li> <li>Les tests sont isol\u00e9s dans une branche d\u00e9di\u00e9e</li> <li>La branche <code>main</code> ne re\u00e7oit que du code stable et test\u00e9</li> </ul> <p>Cette organisation m'a permis de : - Travailler sur plusieurs fonctionnalit\u00e9s en parall\u00e8le - Maintenir un historique clair des d\u00e9veloppements - Isoler les bugs potentiels - Faciliter les revues de code - Garantir la stabilit\u00e9 de la branche principale</p>"}]}